{
  "projektoutline": {
    "studio": {
      "lokaler": 1,
      "oppettider": "Mån-Fre 06:00-21:00",
      "placering": "Södermalm, Stockholm"
    },
    "personal": {
      "instruktorer": 5,
      "admin": 1
    },
    "verksamhet": {
      "klasser": 25,
      "kapacitet": 30,
      "kunder": 200,
      "klasstyper": "Hatha, Vinyasa, Yin"
    },
    "ekonomi": {
      "priser": "Drop-in: 150kr, 10-klippkort: 1200kr, månadskort: 2000kr "
    },
    "nulage": {
      "bokning": "Allt sker manuellt via mejl och telefon. Jag (studiochefen) sköter all administration själv, och det tar mycket tid.\nJag lägger schemat i ett Excel-ark varje månad, skickar ut till instruktörerna för bekräftelse, och uppdaterar sedan hemsidan manuellt. Det vore fantastiskt att kunna lägga schemat i systemet och att det automatiskt syns för kunderna.",
      "bra": "Det manuella systemet har fungerat bra tidigare men nu har de växt så pass mycket att det inte längre fungerar. ",
      "daligt": "Det blir för mycket admin. Det blir misstag, dubbelbokningar, förvirring kring scheman. Svårt att hålla koll på betalningar. "
    }
  },
  "projektdirektiv": {
    "projektledare": "Saga, Nudem, Moa",
    "datum": "",
    "budget": "1,5 MSEK",
    "tidsram": "3 månader för första realease plus 1 månad för testning och fixar",
    "bakgrund": "En liten yogastudio i Stockholm vill utveckla ett digitalt bokningssystem. I dagsläget hanteras allt manuellt via e-post och telefonsamtal,vilket tar mycket tid för personalen. De vill ha en modern, lättanvänd lösning där kunder kan boka, avboka och betala för sina klasser online.",
    "mal_overgripande": "Skapa en digital lösning för hantering av bokningar och betalningar",
    "delmal": "Minska manuella arbetet för personalen\nGöra möjligt för kunder att boka, avboka och omboka pass\nBetala online",
    "omfattning_ingar": "Webbaserat bokningssystem (desktop och mobilanpassat)\nKontoregistrering och login\nBetalningsfunktion\nAvbokning, ombokning, bokning funktion\nAdmin panel",
    "omfattning_ingar_inte": "Projektet omfattar inte utveckling av ett avancerat lojalitetsprogram eller kundklubb\nIntegration med externa ekonomisystem (t.ex. Fortnox, Visma) kan planeras för framtiden men ingår inte i nuvarande budget\nSupport och underhåll efter lansering ingår ej i kontraktet",
    "affarsnytta_kvant": "Minska administrativt arbete 20h/vecka, vilket möjliggör för kund att lägga tid på affärsutveckling\nÖkad försäljning med ett estimat av 50% baserat på kundundersökningar\n\n",
    "affarsnytta_kval": "Ökad tillgänglighet för yogastudions kunder då de kan boka pass utanför studions öppettider\nFörbättrad översyn över ekonomin\nFörenklar för personalen när det gäller scheman och klasser"
  },
  "intressenter": [
    {
      "id": "1",
      "intressent": "Ägare/studiochef",
      "roll": "Administrativ användare, beställare",
      "behov": "Att automatiseringen minskar misstag och minskar administrativt arbete",
      "forvantningar": "Regelbunden avstämmning under projektets gång, har final say kring slutprodukten",
      "inflytande": "hög",
      "intresse": "hög"
    },
    {
      "id": "419d",
      "intressent": "Studions kunder",
      "roll": "Användare av tjänsten",
      "behov": "Vill ha ett lättanvänt system",
      "forvantningar": "Kan vara med i användarintervjuer men ska inte ha insikt i projektarbetet",
      "inflytande": "medel",
      "intresse": "medel"
    },
    {
      "id": "b859",
      "intressent": "Studions personal",
      "roll": "Administrativ användare",
      "behov": "Vill ha enkel översikt över klasser och bokningar",
      "forvantningar": "Skall konsulteras men inte ha final say när det gäller projektets arbete",
      "inflytande": "medel",
      "intresse": "hög"
    },
    {
      "id": "920a",
      "intressent": "Utvecklarteamet/designteamet",
      "roll": "Skapar produkten",
      "behov": "Väldefinierade krav, information",
      "forvantningar": "Skall konsulteras och informeras",
      "inflytande": "hög",
      "intresse": "hög"
    },
    {
      "id": "2ab2",
      "intressent": "Hyresvärden",
      "roll": "Hyresvärd",
      "behov": "Kan påverkas ifall beläggningen ökar och studion måste flytta",
      "forvantningar": "Inga",
      "inflytande": "låg",
      "intresse": "låg"
    },
    {
      "id": "d97f",
      "intressent": "Tekniska leverantörer",
      "roll": "Underleverantör",
      "behov": "inga",
      "forvantningar": "Vill att fakturorna ska betalas",
      "inflytande": "låg",
      "intresse": "låg"
    }
  ],
  "personas": [
    {
      "id": "2bf5",
      "namn": "Anna",
      "alder": "34",
      "yrke": "Grafisk designer",
      "teknisk_kunskap": "4",
      "mal": "- Kunna boka och betala pass snabbt via mobilen\n- Få påminnelse innan passet börjar\n- Se vilka pass som finns lediga under veckan\n- Kunna avboka enkelt vid sjukdom",
      "frustrationer": "- Blir frustrerad när bokningar måste göras via mail eller sms\n- Osäker på om hennes plats är bekräftad\n- Svårt att hålla koll på klippkort och hur många gånger hon har kvar",
      "behov": "- Tydlig översikt över tider och lediga platser\n- Smidig betalning (Swish eller kort)\n- Egen inloggning för att se och hantera bokningar ",
      "citat": "\"Jag vill bara kunna boka min yoga på bussen på väg hem, utan att behöva maila eller ringa någon.\""
    },
    {
      "id": "e7a1",
      "namn": "Johan",
      "alder": "42",
      "yrke": "Frilansande yogainstruktör",
      "teknisk_kunskap": "3",
      "mal": "- Se sitt schema och vilka som är anmälda\n- Kunna meddela om han blir sjuk eller behöver ställa in\n- Ha en enkel kommunikation med yogastudion",
      "frustrationer": "- Måste ofta fråga via sms om vilka pass han har\n- Får sena avbokningar som inte når fram i tid\n- Känner sig utanför planeringen ibland",
      "behov": "- Personlig inloggning med schema\n- Notiser vid ändringar eller avbokningar\n- Möjlighet att markera tillgänglighet",
      "citat": "\"Jag vill slippa jaga information och bara kunna logga in och se mitt schema.\""
    },
    {
      "id": "4c36",
      "namn": "Jonna",
      "alder": "48",
      "yrke": "Ägare och studiochef",
      "teknisk_kunskap": "2",
      "mal": "- Få bort manuellt arbete med bokningar och betalningar\n- Ha tydlig statistik över deltagare och ekonomi\n- Kunna planera schemat smidigt och uppdatera sidan enkelt\n- Ge kunder en proffsig och smidig upplevelse",
      "frustrationer": "- Bokningar via mejl tar för mycket tid\n- Svårt att hålla koll på betalningar\n- För mycket dubbelarbete mellan schema, betalning och hemsida",
      "behov": "- Allt samlat på ett ställe som bokning, betalning osv\n- Lättanvänt, inget tekniskt krångel\n- Funkar med befintlig hemsida",
      "citat": "\"Jag vill lägga mindre tid på administration och mer tid på kunderna och mina anställda.\""
    }
  ],
  "kravspec": {
    "funktionella": [
      {
        "id": "FK-001",
        "krav": "Användarautentiseting",
        "beskrivning": "Användare måste kunna registrera ett konto och logga in",
        "moscow": "must"
      },
      {
        "id": "FK-002",
        "krav": "Lista med tillgängliga pass ",
        "beskrivning": "Visa passets namn, tid och instruktör, sorterat på datum",
        "moscow": "must"
      },
      {
        "id": "FK-003",
        "krav": "Boka pass",
        "beskrivning": "Knapp för att boka ett pass",
        "moscow": "must"
      },
      {
        "id": "FK-004",
        "krav": "Avboka pass",
        "beskrivning": "Visa bokade pass och knapp för att avboka",
        "moscow": "must"
      },
      {
        "id": "FK-005",
        "krav": "Köp av digitalt klippkort eller periodskort ",
        "beskrivning": "Klippkort eller periodskort kopplas till användarens konto",
        "moscow": "must"
      },
      {
        "id": "FK-006",
        "krav": "Betalning vid bokning",
        "beskrivning": "Vid innehav av klippkort dras ett klipp, vid innehav av periodskort sker ingen betalning, skall även finnas möjlighet till direktbetalning per pass",
        "moscow": "must"
      },
      {
        "id": "FK-007",
        "krav": "Kvitto på betalning",
        "beskrivning": "Via mejl eller i appen",
        "moscow": "must"
      },
      {
        "id": "FK-008",
        "krav": "Länk från befintlig wordpress-hemsida",
        "beskrivning": "",
        "moscow": "should"
      },
      {
        "id": "FK-009",
        "krav": "Detaljerad klassinformation",
        "beskrivning": "När en användare klickar på en klass ska en beskrivning av klassen visas, tillsammans med en bokningsknapp",
        "moscow": "could"
      },
      {
        "id": "FK-010",
        "krav": "Admin-inloggning",
        "beskrivning": "Studioschef och instruktörer behöver kunna logga in på en separat sida",
        "moscow": "must"
      },
      {
        "id": "FK-011",
        "krav": "Lägga schema",
        "beskrivning": "Studioschef behöver kunna lägga in klasser och tilldela instruktörer",
        "moscow": "must"
      },
      {
        "id": "FK-012",
        "krav": "Visa instruktörsschema",
        "beskrivning": "Instruktörer behöver kunna se sitt schema med bokade klasser",
        "moscow": "must"
      },
      {
        "id": "FK-013",
        "krav": "Sätta priser",
        "beskrivning": "Studioschefen behöver kunna uppdatera prislistorna",
        "moscow": "must"
      },
      {
        "id": "FK-014",
        "krav": "Incheckning på plats",
        "beskrivning": "Förslagsvis med en QR-kod. ",
        "moscow": "could"
      },
      {
        "id": "FK-015",
        "krav": "Beläggningsöversikt, ekonomisk översikt",
        "beskrivning": "Visa data kring beläggning och försäljning över tid",
        "moscow": "could"
      },
      {
        "id": "FK-016",
        "krav": "Integrering med hemsida",
        "beskrivning": "Iframe / embed / ny hemsida",
        "moscow": "wont"
      },
      {
        "id": "FK-017",
        "krav": "Exportera Försäljningsrapporter",
        "beskrivning": "Behövs för bokföring",
        "moscow": "must"
      },
      {
        "id": "FK-018",
        "krav": "Integrering med studions bokföringssytem",
        "beskrivning": "",
        "moscow": "could"
      },
      {
        "id": "FK-019",
        "krav": "Betala med klarna",
        "beskrivning": "Kopplat till IFK-002. Vi slipper bygga ett eget betalsystem och förenklar utcheckning för kunder vilket kan boosta försäljning rejält",
        "moscow": "should"
      },
      {
        "id": "FK-020",
        "krav": "Logga in med google",
        "beskrivning": "kopplat till IFK-003 IFK-004",
        "moscow": "should"
      },
      {
        "id": "FK-021",
        "krav": "Logga in med mejl",
        "beskrivning": "I de fall användare inte har google konto behövs inloggning med mejl",
        "moscow": "must"
      },
      {
        "id": "FK-022",
        "krav": "2fa och lösenordsåtersällning",
        "beskrivning": "Kopplat till IFK-003",
        "moscow": "must"
      },
      {
        "id": "FK-023",
        "krav": "Visa och godkänna integritetspolicy",
        "beskrivning": "Kopplat till IFK-006",
        "moscow": "must"
      }
    ],
    "ickefunktionella": [
      {
        "id": "IFK-001",
        "kategori": "anvandbarhet",
        "beskrivning": "Mobile-first design, viktigt då många bokar pass via mobilen",
        "prioritet": "must"
      },
      {
        "id": "IFK-002",
        "kategori": "anvandbarhet",
        "beskrivning": "Enkla betalningar för att förhindra att kunder vänder i kassan",
        "prioritet": "must"
      },
      {
        "id": "IFK-003",
        "kategori": "sakerhet",
        "beskrivning": "Säkra inloggningar",
        "prioritet": "must"
      },
      {
        "id": "IFK-004",
        "kategori": "anvandbarhet",
        "beskrivning": "Enkla inloggningar",
        "prioritet": "must"
      },
      {
        "id": "IFK-005",
        "kategori": "prestanda",
        "beskrivning": "Sidladdningar ska max ta 1 sekund, för längre laddtider på upp till 3 sekunder ska en spinner visas",
        "prioritet": "should"
      },
      {
        "id": "IFK-006",
        "kategori": "gdpr",
        "beskrivning": "Integritetspolicy",
        "prioritet": "must"
      },
      {
        "id": "IFK-007",
        "kategori": "anvandbarhet",
        "beskrivning": "Intuitivt UI",
        "prioritet": "should"
      },
      {
        "id": "IFK-008",
        "kategori": "branding",
        "beskrivning": "Design enligt kunds befintliga grafiska profil",
        "prioritet": "should"
      }
    ]
  },
  "riskanalys": [
    {
      "id": "1",
      "krav": "Återanvända / Läckta lösenord",
      "konsekvens": "3",
      "forebygga": "Inlogg med google och krav på säkra lösenord och 2fa",
      "atgard": "Det är användarens ansvar att byta lösenord",
      "sannolikhet": "4"
    },
    {
      "id": "2354",
      "krav": "Dubbelbokningar",
      "konsekvens": "3",
      "sannolikhet": "2",
      "forebygga": "Administratör behöver kunna sätta max-antal deltagare per pass, bokning skall låsas efter det",
      "atgard": "Ifall detta händer beror det på en bugg i koden och utvecklare ska felsöka och åtgärda felet"
    },
    {
      "id": "e0f2",
      "krav": "Tekniska fel, buggar",
      "konsekvens": "5",
      "sannolikhet": "5",
      "forebygga": "Produkten ska genomgå gedigen testning innan leverans",
      "atgard": "Utvecklare ska felsöka och åtgärda problemet"
    },
    {
      "id": "f926",
      "krav": "Konflikter mellan beställare och oss",
      "konsekvens": "5",
      "sannolikhet": "3",
      "forebygga": "Vid projektstart ska ett kontrakt skrivas som innehåller vad som skall göras, vad som inte skall göras, budget och tidsram. ",
      "atgard": "Ifall meningsskiljaktigheter uppstår, hänvisa till kontraktet. Ifall konflikten inte går att lösa, ta in en jurist. "
    },
    {
      "id": "f40b",
      "krav": "Försening av leverans på grund av oförutsägbara händelser som sjukdom eller dylikt",
      "konsekvens": "3",
      "sannolikhet": "4",
      "forebygga": "Lägg på lite extra tid när tidsestimat kommuniceras gentemot kund. I kontraktet skall hantering av förseningar inkluderas. ",
      "atgard": "Kommuncera detta till kund och hänvisa till kontraktet"
    },
    {
      "id": "9a95",
      "krav": "Fel hos tekniska leverantörer (molntjänster, betaltjänster och dyl.)",
      "konsekvens": "3",
      "sannolikhet": "4",
      "forebygga": "Detta händer och går inte att helt mitigera. Vi kan minska risken genom att endast jobba med stora leverantörer som har resurser för att snabbt åtgärda problemen. ",
      "atgard": "Kontakta leverantör för uppdatering, informera användarna kring felet"
    }
  ],
  "tidsresursestimat": {
    "tidsuppskattning": "3 månader",
    "kostnadsuppskattning": "807 000",
    "kompetensbehov": "-Utvecklare\n-Ux\n-Projektledning\n-Scrum",
    "faser": "Sprint 1 – PoC & Grundläggande UI\n- Minimal version av bokningsflödet (kund kan se, boka och avboka klasser).\n- Minimal adminfunktion (lägg till/ta bort klasser, se bokningsstatus).\n- Enkel betalningssimulering (utan riktiga transaktioner).\n- Test med 3 kunder och 2 instruktörer för att verifiera funktionalitet och användarvänlighet.\n- Grundläggande användargränssnitt och inloggning.\n\nSprint 2 – Bokningsflöde & Kalendersystem\n- Utveckla fullständigt bokningsflöde.\n- Integrera kalendersystem för klasser och tillgänglighet.\n\nSprint 3 – Betalningsintegration\n- Implementera riktig betalningsfunktion (om PoC var godkänd).\n- Säkerställ betalningsflöde och kvittenser.\n\nSprint 4 – Adminpanel för personal\n- Utveckla fullständig adminpanel för instruktörer och studiochef.\n- Hantera klasser, bokningar och rapporter.\n\nSprint 5 – Notiser, testning och lansering\n- Implementera notiser till kunder och personal.\n- Genomföra sluttestning och användartester.\n- Förbereda lansering och deployment.",
    "beroenden": "",
    "milstolpar": "Möte med beställare sker vid varje avslutat delemoment.\nDelleveranser:\n-Figma prototyp\n-Poc med grundläggande funktionalitet\n-Utökad funktionalitet\n-Deployad version"
  },
  "genomforandestrategi": {
    "utvecklingsmetod": "Vi kommer arbeta med agila projektsmetoden Scrum eftersom projektet kommer kräva flexibilitet och kontinuerlig återkoppling från våra kravställare och från deras användare. \nMed denna metod kan vi arbeta iterativt med täta leveranser, regelbundna användartester och kontinuerliga justeringar baserade på feedback.",
    "iterationer": "Sprint 1 - Proof of Concept (PoC) & Grundläggande UI\nMål: Att validera den tekniska grunden och användarupplevelsen innan full funktionalitet utvecklas.\n\nFokusområden:\n- Etablera backend-struktur (databas och autentisering).\n- Skapa low-fidelity prototyper för användarroller (kund, instruktör, admin).\n- Implementera grundläggande frontend för inloggning och användaråtkomst.\n- Simulera enklare boknings- och dataflöden (utan riktiga transaktioner).\n- Genomföra tidig användartestning med 2 instruktörer och 3 kunder för att verifiera koncept och designriktning.\n\nResultat:\nEn fungerande prototyp som bekräftar teknisk genomförbarhet, grundläggande UI och användarflöden — vilket utgör basen för vidare utveckling i Sprint 2 (bokning och kalender).\n\n\nSprint 2 - Bokningsflöde & Kalendersystem\n\nMål: Att bygga ut den centrala funktionaliteten för bokning och tillgänglighet för både kunder och instruktörer.\n\nFokusområden:\n- Utveckla komplett bokningsflöde (se, boka och avboka klasser).\n- Integrera kalendersystem för att visa tillgängliga klasser i realtid.\n- Skapa vyer för veckovis/månadsvis översikt av klasser.\n- Lägga till stöd för olika användarroller (kund/instruktör).\n- Testa flödet med riktiga användare för att säkerställa användarvänlighet.\n\nResultat:\nEtt fullt fungerande bokningssystem där kunder kan hantera sina bokningar och instruktörer kan se klassöversikter, med kalenderintegration som synkar backend och frontend.\n\n\nSprint 3 - Betalningsintegration\n\nMål: Att implementera ett säkert och fungerande betalningsflöde som stödjer studions affärsmodell.\n\nFokusområden:\n- Integrera betalningslösning (t.ex. Klarna eller Swish via API).\n- Säkerställa att betalningar loggas korrekt i databasen.\n- Implementera kvittens- och bekräftelsefunktioner för användare.\n- Testa betalningsflödet med både lyckade och misslyckade transaktioner.\n- Förbereda för lansering av betalningsdelen med korrekt datasäkerhet.\n\nResultat:\nEtt stabilt betalningssystem där kunder kan betala för klasser direkt online och få kvitto, vilket gör systemet redo för fullständig drift och framtida lansering.\n\n\nSprint 4 - Adminpanel & Hantering av Instruktörer och Klasser\n\nMål: Att utveckla en komplett adminpanel för studiochefen och instruktörer, samt lägga till funktioner för schemaläggning, rapporter och medlemskap.\n\nFokusområden:\n- Instruktörshantering: Möjlighet att lägga till, redigera och ta bort instruktörer samt koppla dem till specifika klasser.\n- Schema och arbetstider: Instruktörer kan ange sina tillgängliga tider, se kommande klasser och uppdatera scheman.\n- Rapporter och närvaroöversikt: Administratören kan se bokningsstatistik, klassnärvaro och intäktsöversikt.\n- Prissättning: Implementera funktion för att visa och justera priser i frontend och adminpanelen.\n- Medlemskap: Användare kan välja mellan olika medlemskapstyper med olika villkor (ex. månadskort, klippkort, drop-in).\n\nResultat:\nEn fullt fungerande adminpanel som ger både administratörer och instruktörer möjlighet att hantera klasser, tider, priser och användardata effektivt, vilket kommer minska manuell administration och öka översikten för studion.\n\n\nSprint 5 - Notiser, Testning och Lansering\n\nMål: Att säkerställa en stabil och användarvänlig slutprodukt genom att implementera kommunikation, utföra omfattande tester och förbereda lanseringen.\n\nFokusområden:\n- Notiser och kommunikation: Implementera system för e-post/SMS-påminnelser och meddelanden mellan instruktörer och användare.\n- Testning och buggfixar: Genomföra system-, användar- och acceptanstester. Identifiera och åtgärda buggar innan lansering.\n- Lansering och dokumentation: Förbereda release till produktion, skapa användardokumentation och intern teknisk dokumentation för framtida underhåll.\n\nResultat:\nEn färdig, testad och dokumenterad applikation redo för lansering — med fungerande kommunikation, stabil drift och tydlig dokumentation för både användare och personal.",
    "leveranser": "Sprint 1–2: Fungerande prototyp i Figma och enklare bokningsflöde.\n\nSprint 3–4: Fullständig webblösning med betalning och hantering av klasser.\n\nSprint 5: Färdigställd produkt med dokumentation och användarguide.",
    "testning": "Regelbundna tester under projektets gång:\n\n1. Enhetstester för centrala funktioner (bokning, betalning) - kollar att varje del fungerar som det ska \n2. Integrationstester mellan frontend och backend - att båda delarna integrerar som de ska\n3. Användartester med instruktörer och kunder för att säkerställa enkelhet.\n4. Acceptanstester innan lansering, godkända av studiochefen.",
    "figma": "Designen för hemsidan tas fram i Figma med fokus på enkelhet och mobilvänlighet.\n\n- Färger och stil baseras på studions befintliga designprofil\n- Wireframes, protoyp, användartest, och justeringar.\n- Designen används som grund för frontend-utvecklingen.",
    "poc": "- Skapa en enkel prototyp där kunder kan boka/avboka klasser och instruktörer kan lägga till/ta bort klasser samt se bokningsstatus.\n- Testa bokningsflödet med 3 kunder och 2 instruktörer för att verifiera funktionalitet och användarvänlighet.\n- Inkludera enkel betalningssimulering (utan riktiga transaktioner) för att visa hur det ska funka"
  },
  "ekonomiskoversikt": {
    "utvecklingskostnader": "Personalkostnader: \n1 designer, 52000 sek per månad\n1 utvecklare, 52000 sek per månad\n1 scrum/utvecklare 71500 kr\n1 produktägare 71500 kr\nPersonalkostnader per månad: 247000 kr\n\nMinsta accepterade Vinstmarginal: 500 000 kr\nAtt jobba för: 1000 000 kr\n\nTidsplan 3 månader blir i totala personalkostnader: 741 000 kr\n\nKontorshyra 15000 kr per månad, 45000 kr för hela projektets gång.",
    "licenser": "1000 sek per månad + 20 000 initial deployment ",
    "integration": "Skall inte göras i nuläget",
    "drift": "Betalas av kund efter leverans",
    "underhall": "Betalas av kund efter leverans",
    "support": "Ej i scope",
    "antaganden": "",
    "besparingar": ""
  },
  "kvalitetoppfoljning": {
    "kodstandarder": "- Koden ska följa gemensam stilguide för projektet (exempelvis ESLint + Prettier för JavaScript/TypeScript).\n\n- Namngivning ska vara konsekvent och tydlig (engelska variabel- och funktionsnamn, camelCase i kod, PascalCase för komponenter).\n\n- All ny frontendkod ska vara modulär och återanvändbar (komponentbaserad).\n\n- Säkerhet och integritet ska beaktas i all kod som rör bokning och betalning:\n    - Ingen känslig betalinfo sparas i klartext.\n    - Endast nödvändiga personuppgifter lagras.\n\n- Tillgänglighet: gränssnittet ska byggas enligt WCAG-principer",
    "teststrategi": "- Enhetstester: Centrala funktioner (bokning, avbokning, betalning, inloggning) ska ha tester som säkerställer att regler följs, ex. “kan man boka ett pass om klassen redan är full?”, “får man avboka senare än 2h innan?” etc.\n\n- Integrationstester: Flöden där flera delar pratar med varandra ska testas, t.ex. “användare bokar → plats räknas ner → betalning registreras”.\n\n- Manuella användartester: Studiochef + 1 instruktör + 1 kund testar flödet en testmiljö innan release, för att se om det är begripligt utan teknisk bakgrund.\n\n- Responsivitet: Systemet testas på mobil, surfplatta och desktop eftersom många kunder bokar via telefon.\n\n- Bugghantering: Hittade buggar ska dokumenteras i backloggen med:\n    - beskrivning av buggen\n    - steg för att återskapa buggen  \n    - prioritet (ex hög / normal / låg)\n    - vem som är ansvarig\n",
    "versionshantering": "- Projektet ska versionshanteras i Git.\n\n- Branch-strategi (förslag, vi måste kolla detta):\n    - main = stabil kod som är testad och godkänd för release.\n    - develop = pågående arbete som är integrerat men inte släppt.\n    - feature-brancher = ex bokning, betalning, etc. En feature branch mergas tillbaka via pull request och kodgranskning.\n\n - Pull requests: Ingen kod går in i develop utan review av minst 1 annan utvecklare\n\n- Releaser: När en milstolpe är klar taggas en release\n\n- Hotfixar: Kritiska buggar i produktion (ex går inte att boka/betala) fixas i en separat hotfix/branch från main och pushas ut direkt.\n",
    "dokumentation": "- Teknisk dokumentation:\n    - Arkitekturöversikt (hur frontend, backend och ev. betalningsleverantör hänger ihop).\n    - API-dokumentation: endpoints, vad de tar emot/skickar tillbaka.\n    - Setup-guide: hur man startar projektet lokalt och hur man deployar.\n\n- Admin-manual för studion:\n    - Hur man lägger upp ett nytt yogapass.\n    - Hur man sätter maxantal platser.\n    - Hur man ser vilka som är bokade.\n    - Hur man markerar ett pass som inställt.\n\n- Dokumentationen ska ligga i repo (README).\n\n- All ny större funktion (ex “avbokningsregler”) ska få en kort beskrivning: syfte, hur det funkar, vad man inte ska göra\n",
    "matpunkter": "- Projekt-KPI under utveckling:\n    - Andel färdiga/klara user stories i backloggen per sprint.\n    - Antal kritiska buggar öppna vs stängda (målet: inga kritiska öppna inför release).\n    - Testtäckning på kärnflöden (bokning/betalning ska alltid vara testade).\n\n- Affärs-/verksamhets-KPI vid driftsättning (vad studion bryr sig om):\n    - Minskad administrationstid: antal bokningsmejl per vecka före vs efter lansering.\n    - Beläggningsgrad per klass: hur många platser som faktiskt fylls.\n    - Antal lyckade bokningar som går hela vägen genom betalning utan manuell hjälp.\n    - Avbokningar i tid (innan 2h-gränsen) – viktigt för studion för att kunna släppa platsen till någon annan.\n"
  },
  "rekommendation": {
    "sammanfattning": "Vi kör vidare med projektet, allt ser bra ut. ",
    "rekommendation": "",
    "beslutspunkter": "Nästa steg, planera sprintar och tickets i Jira.",
    "fordjupning": "Mer detaljerade jira tasks och user stories."
  }
}